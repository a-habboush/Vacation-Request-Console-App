// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VacationRequestTask;

#nullable disable

namespace VacationRequestTask.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250214212458_fixed employee")]
    partial class fixedemployee
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VacationRequestTask.Department", b =>
                {
                    b.Property<int>("departmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("departmentId"));

                    b.Property<string>("departmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("departmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("VacationRequestTask.Employee", b =>
                {
                    b.Property<int>("employeeNum")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(6)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("employeeNum"));

                    b.Property<int>("departmentId")
                        .HasColumnType("int");

                    b.Property<string>("employeeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("genderCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("positionId")
                        .HasColumnType("int");

                    b.Property<int>("remainingVacationDays")
                        .HasColumnType("int");

                    b.Property<int?>("reportedToId")
                        .HasMaxLength(6)
                        .HasColumnType("int");

                    b.Property<decimal>("salary")
                        .HasPrecision(2)
                        .HasColumnType("decimal(2,2)");

                    b.HasKey("employeeNum");

                    b.HasIndex("departmentId");

                    b.HasIndex("positionId");

                    b.ToTable("Employee", t =>
                        {
                            t.HasCheckConstraint("check_vacationdays_limit", "remainingVacationDays <= 24");
                        });
                });

            modelBuilder.Entity("VacationRequestTask.Position", b =>
                {
                    b.Property<int>("positionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("positionId"));

                    b.Property<string>("positionName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("positionId");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("VacationRequestTask.RequestState", b =>
                {
                    b.Property<int>("reqStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("reqStateId"));

                    b.Property<string>("reqStateName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("reqStateId");

                    b.ToTable("RequestState");
                });

            modelBuilder.Entity("VacationRequestTask.Vacation", b =>
                {
                    b.Property<string>("vacationTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("vacationTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("vacationTypeId");

                    b.ToTable("Vacation");
                });

            modelBuilder.Entity("VacationRequestTask.VacationRequest", b =>
                {
                    b.Property<int>("reqId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("reqId"));

                    b.Property<int>("RequestStatereqStateId")
                        .HasColumnType("int");

                    b.Property<int?>("approvedById")
                        .HasColumnType("int");

                    b.Property<int?>("deniedById")
                        .HasColumnType("int");

                    b.Property<int>("employeeNum")
                        .HasMaxLength(6)
                        .HasColumnType("int");

                    b.Property<int>("employeeNum1")
                        .HasColumnType("int");

                    b.Property<DateOnly>("endDate")
                        .HasColumnType("date");

                    b.Property<string>("reqDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("reqStateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("reqSubmitDate")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("startDate")
                        .HasColumnType("date");

                    b.Property<int>("vacationDaysTotal")
                        .HasColumnType("int");

                    b.Property<string>("vacationTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("vacationTypeId1")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("reqId");

                    b.HasIndex("RequestStatereqStateId");

                    b.HasIndex("employeeNum1");

                    b.HasIndex("vacationTypeId1");

                    b.ToTable("VacationRequest");
                });

            modelBuilder.Entity("VacationRequestTask.Employee", b =>
                {
                    b.HasOne("VacationRequestTask.Department", "Department")
                        .WithMany()
                        .HasForeignKey("departmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VacationRequestTask.Position", "Position")
                        .WithMany()
                        .HasForeignKey("positionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("VacationRequestTask.VacationRequest", b =>
                {
                    b.HasOne("VacationRequestTask.RequestState", "RequestState")
                        .WithMany()
                        .HasForeignKey("RequestStatereqStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VacationRequestTask.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("employeeNum1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VacationRequestTask.Vacation", "Vacation")
                        .WithMany()
                        .HasForeignKey("vacationTypeId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("RequestState");

                    b.Navigation("Vacation");
                });
#pragma warning restore 612, 618
        }
    }
}
